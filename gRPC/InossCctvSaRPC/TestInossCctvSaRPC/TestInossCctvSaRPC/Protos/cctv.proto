////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Sample from:
//      https://learn.microsoft.com/en-us/aspnet/core/grpc/json-transcoding?view=aspnetcore-8.0
//
//

syntax = "proto3";

option csharp_namespace = "Test.Com.Efacec.ES.Efarail.Cctv.Grpc.Operation";
import "google/api/annotations.proto";

package cctv;



service Operation {
	// Obtain the Operation service version - simple version
    // Like: 
    //      curl https://localhost:7125/v1/simpleversion
	rpc GetSimpleVersion(EmptyRequest) returns (VersionsReply){
        option (google.api.http) = {
            get: "/v1/simpleversion"
        };
    }

	// Obtain the Operation service version
    // Like: 
    //      curl https://localhost:7125/v1/versions/6/666/SixSixSix
	//rpc GetVersions(VersionRequestMsg) returns (VersionsReply){
    //    option (google.api.http) = {
    //        get: "/v1/versions/{id}/{version.id}/{version.desc}"
    //    };
    //}

	// Obtain the Operation service version
    // Like: 
    //      curl https://localhost:7125/v1/versions/7?version.id=777&version.desc=SevenSevenSeven
	rpc GetVersionsWithNoBound(VersionRequestMsg) returns (VersionsReply){
        option (google.api.http) = {
            get: "/v1/versions/{id}"
        };
    }

	// Obtain the Operation service version
    // Like: 
    //      
	rpc GetVersionsThroughPost(VersionRequestMsg) returns (VersionsReply){
        option (google.api.http) = {
            post: "/v1/versionsPost"
            body: "versions"
        };
    }

    // Creates a new shelf in the bookstore.
    rpc CreateShelf(CreateShelfRequest) returns (Shelf) {
      // Client example:
      //   curl -d '{"theme":"Music"}' https://localhost:7125/v1/shelves
      option (google.api.http) = {
        post: "/v1/shelves"
        body: "shelf"
      };
    }
}


message Shelf {
    //int64 id = 1;
    string theme = 1;
}

message CreateShelfRequest {
    Shelf shelf = 1;
}

message EmptyRequest {}


message VersionRequest {
    int64 id = 1;
    string desc = 2;
}

message VersionRequestMsg {
    int64 id = 1;
    repeated VersionRequest versions = 2;
} 

message VersionBaseMsg {
	// The version major value.
	int64 version = 1;
	// The version major value.
	int64 subversion = 2;
	// The version major value.
	int64 revision = 3;
	// The version major value.
	int64 build = 4;
	// A description of the returned value, if needed/wanted (can be left empty).
	string desc = 5;
}

message VersionsReply {
    //
    string desc = 1;
	//
    repeated VersionBaseMsg versions = 2;
}

